<?php

/**
 * Basearticle
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $title
 * @property date $date_from
 * @property string $sneak_peak
 * @property string $body
 * @property integer $article_category_id
 * @property string $author
 * @property boolean $hidden
 * @property article_category $category
 * 
 * @method string           getTitle()               Returns the current record's "title" value
 * @method date             getDateFrom()            Returns the current record's "date_from" value
 * @method string           getSneakPeak()           Returns the current record's "sneak_peak" value
 * @method string           getBody()                Returns the current record's "body" value
 * @method integer          getArticleCategoryId()   Returns the current record's "article_category_id" value
 * @method string           getAuthor()              Returns the current record's "author" value
 * @method boolean          getHidden()              Returns the current record's "hidden" value
 * @method article_category getCategory()            Returns the current record's "category" value
 * @method article          setTitle()               Sets the current record's "title" value
 * @method article          setDateFrom()            Sets the current record's "date_from" value
 * @method article          setSneakPeak()           Sets the current record's "sneak_peak" value
 * @method article          setBody()                Sets the current record's "body" value
 * @method article          setArticleCategoryId()   Sets the current record's "article_category_id" value
 * @method article          setAuthor()              Sets the current record's "author" value
 * @method article          setHidden()              Sets the current record's "hidden" value
 * @method article          setCategory()            Sets the current record's "category" value
 * 
 * @package    tnt
 * @subpackage model
 * @author     Tomasz ROGALSKI rogalski.tomaszek@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basearticle extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article');
        $this->hasColumn('title', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('date_from', 'date', null, array(
             'type' => 'date',
             'notnull' => true,
             ));
        $this->hasColumn('sneak_peak', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('body', 'string', null, array(
             'type' => 'string',
             'notnull' => false,
             ));
        $this->hasColumn('article_category_id', 'integer', null, array(
             'type' => 'integer',
             'notnull' => false,
             ));
        $this->hasColumn('author', 'string', 128, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 128,
             ));
        $this->hasColumn('hidden', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('article_category as category', array(
             'local' => 'article_category_id',
             'foreign' => 'id',
             'onDelete' => 'SET NULL'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'title',
              1 => 'sneak_peak',
              2 => 'body',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'title',
             ),
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'title',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($timestampable0);
        $this->actAs($i18n0);
    }
}