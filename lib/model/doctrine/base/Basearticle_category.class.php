<?php

/**
 * Basearticle_category
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $name
 * @property boolean $hidden
 * @property Doctrine_Collection $article
 * 
 * @method string              getName()    Returns the current record's "name" value
 * @method boolean             getHidden()  Returns the current record's "hidden" value
 * @method Doctrine_Collection getArticle() Returns the current record's "article" collection
 * @method article_category    setName()    Sets the current record's "name" value
 * @method article_category    setHidden()  Sets the current record's "hidden" value
 * @method article_category    setArticle() Sets the current record's "article" collection
 * 
 * @package    tnt
 * @subpackage model
 * @author     Tomasz ROGALSKI rogalski.tomaszek@gmail.com
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Basearticle_category extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('article_category');
        $this->hasColumn('name', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('hidden', 'boolean', null, array(
             'type' => 'boolean',
             'default' => 0,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('article', array(
             'local' => 'id',
             'foreign' => 'article_category_id'));

        $i18n0 = new Doctrine_Template_I18n(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             ));
        $sluggable1 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'name',
             ),
             'uniqueBy' => 
             array(
              0 => 'lang',
              1 => 'name',
             ),
             ));
        $i18n0->addChild($sluggable1);
        $this->actAs($i18n0);
    }
}